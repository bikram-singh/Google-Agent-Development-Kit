import os
from adk.agent import Agent
from adk.llm import LLM
from adk.tool import Tool
from google.cloud import securitycenter

def list_vulnerabilities(project_id: str) -> str:
    """
    Lists all vulnerabilities in a GCP project.

    Parameters:
        project_id: The ID of the GCP project.
    """
    client = securitycenter.SecurityCenterClient()

    # The parent resource to list vulnerabilities for.
    parent = f"projects/{project_id}"

    # The filter to use to list only vulnerabilities.
    filter = "category='VULNERABILITY'"

    # List all vulnerabilities in the project.
    all_findings = client.list_findings(request={"parent": parent, "filter": filter})

    # Create a list of all vulnerabilities.
    vulnerabilities = []
    for i, finding in enumerate(all_findings):
        vulnerabilities.append(f"{i + 1}. {finding.finding.category} - {finding.finding.description}")

    # Return the list of vulnerabilities.
    return "\n".join(vulnerabilities)

def main():
    # The tool that the agent will use to list vulnerabilities.
    list_vulnerabilities_tool = Tool(
        name="list_vulnerabilities",
        description="Lists all vulnerabilities in a GCP project.",
        func=list_vulnerabilities,
    )

    # The LLM that the agent will use to generate text.
    llm = LLM.from_string("@llms.txt")

    # The agent that will answer questions about GCP vulnerabilities.
    agent = Agent(
        llm=llm,
        tools=[list_vulnerabilities_tool],
    )

    # The main loop of the agent.
    while True:
        # Get the user's question.
        question = input("Ask a question about GCP vulnerabilities: ")

        # If the user wants to exit, then break the loop.
        if question == "exit":
            break

        # Answer the user's question.
        for chunk in agent.run(question):
            if chunk.content:
                print(chunk.content, end="")
        print()


if __name__ == "__main__":
    main()